summary: "로그인"
description: "로그인 api"
tags:
    - auth
consumes:
  - application/json
produces:
- "application/json"
requestBody:
        description: email과 pw (json 형태)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/Login'
            examples:
              user1:
                summary: 강인선
                value:
                  email: "sunink1@naver.com"
                  pw: "qwer!@6789"
              user2:
                summary: 김다인
                value:
                  email: "dainlinda@naver.com"
                  pw: "dainlinda!@1234"
responses:
  200:
    description: OK
    content:
      application/json:
        schema:
          type: object
          example:
            {
<<<<<<< HEAD
              "access_token": "액세스 토큰 내용",
=======
              "accessToken": "액세스 토큰 내용",
>>>>>>> feature_UI/UX
              "nickname": "강인성"
            }
  400:
    description: Missing JSON in request
    content:
      application/json:
        schema:
          type: object
          example:
<<<<<<< HEAD
            {'errorCode': 'Missing_JSON', 'msg': 'Missing JSON in request'}
=======
            {'errorCode': 'missing_json', 'msg': 'Missing JSON in request'}
>>>>>>> feature_UI/UX
  400.1:
    description: 존재하지 않는 회원
    content:
      application/json:
        schema:
          type: object
          example:
<<<<<<< HEAD
            {'errorCode': 'Not_Exists', 'msg': 'This member does not exist'}
=======
            {'errorCode': 'not_exists', 'msg': 'This member does not exist'}
>>>>>>> feature_UI/UX
  400.2:
    description: 이메일 입력 안함
    content:
      application/json:
        schema:
          type: object
          example:
<<<<<<< HEAD
            {'errorCode': 'Missing_email', 'msg': 'Missing email in request'}
=======
            {'errorCode': 'missing_email', 'msg': 'Missing email in request'}
>>>>>>> feature_UI/UX
  400.3:
    description: 비밀번호 입력 안함
    content:
      application/json:
        schema:
          type: object
          example:
<<<<<<< HEAD
            {'errorCode': 'Missing_pw', 'msg': 'Missing password in request'}
=======
            {'errorCode': 'missing_pw', 'msg': 'Missing password in request'}
>>>>>>> feature_UI/UX
  400.4:
    description: 틀린 비밀번호
    content:
      application/json:
        schema:
          type: object
          example:
<<<<<<< HEAD
            {'errorCode': 'Incorrect_pw', 'msg': 'Incorrect Password'}
=======
            {'errorCode': 'incorrect_pw', 'msg': 'Incorrect Password'}
>>>>>>> feature_UI/UX
definitions:
  Login:
    type: object
    required:
      - email
      - pw
    properties:
      email:
        type: string
      pw:
        type: string
